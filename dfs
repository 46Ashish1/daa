#include <iostream>
using namespace std;
const int MAXN = 100; 
int adjList[MAXN][MAXN]; 
bool visited[MAXN]; 
void dfs(int curr, int n) {
    visited[curr] = true;
    cout << curr << " ";
    for (int i = 0; i < n; i++) {
        if (adjList[curr][i] && !visited[i]) {
            dfs(i, n);
        }
    }
}

int main() {
    int n, m; 
    cout << "Enter the number of vertices and edges: ";
    cin >> n >> m;
    cout << "Enter the edges: " << endl;
    for (int i = 0; i < m; i++) {
        int u, v;
        cin >> u >> v;
        adjList[u][v] = 1;
        adjList[v][u] = 1; // Uncomment for undirected graphs
    }
    cout << "DFS traversal of the graph: ";
    for (int i = 0; i < n; i++) {
        visited[i] = false;
    }
    for (int i = 0; i < n; i++) {
        if (!visited[i]) {
            dfs(i, n);
        }
    }
    cout << endl;

    return 0;
}
