#include <iostream>
#include <algorithm>
using namespace std;
const int MAXN = 100; 
struct Item {
    int value, weight;
};
int knapsack(Item items[], int n, int W) {
    int dp[MAXN+1][W+1];
    for (int i = 0; i <= n; i++) {
        for (int w = 0; w <= W; w++) {
            if (i == 0 || w == 0) {
                dp[i][w] = 0;
            } else if (items[i-1].weight <= w) {
                dp[i][w] = max(dp[i-1][w], dp[i-1][w-items[i-1].weight] + items[i-1].value);
            } else {
                dp[i][w] = dp[i-1][w];
            }
        }
    }
    return dp[n][W];
}

int main() {
    int n, W;
    cout << "Enter the number of items: ";
    cin >> n;
    cout << "Enter the maximum weight of the knapsack: ";
    cin >> W;

    Item items[MAXN];
    cout << "Enter the value and weight of each item:" << endl;
    for (int i = 0; i < n; i++) {
        cin >> items[i].value >> items[i].weight;
    }

    int maxValue = knapsack(items, n, W);
    cout << "The maximum value that can be obtained is: " << maxValue << endl;

    return 0;
}
