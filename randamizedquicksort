#include <iostream>
#include <cstdlib>
#include <ctime>

using namespace std;

int partition(int arr[], int low, int high, int &num_comparisons) {
    int pivot_index = low + rand() % (high - low + 1);
    int pivot = arr[pivot_index];

    swap(arr[pivot_index], arr[high]);
    num_comparisons++;

    int i = low - 1;
    for (int j = low; j <= high - 1; j++) {
        if (arr[j] < pivot) {
            i++;
            swap(arr[i], arr[j]);
            num_comparisons++;
        }
    }
    swap(arr[i + 1], arr[high]);
    num_comparisons++;

    return i + 1;
}

void quicksort(int arr[], int low, int high, int &num_comparisons) {
    if (low < high) {
        int pi = partition(arr, low, high, num_comparisons);
        quicksort(arr, low, pi - 1, num_comparisons);
        quicksort(arr, pi + 1, high, num_comparisons);
    }
}

int main() {
    int n;
    cout << "Enter the size of the array: ";
    cin >> n;

    int arr[n];
    cout << "Enter the elements of the array: ";
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }

    int num_comparisons = 0;
    srand(time(NULL));  // Seed the random number generator
    quicksort(arr, 0, n - 1, num_comparisons);

    cout << "Sorted array: ";
    for (int i = 0; i < n; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;

    cout << "Number of comparisons: " << num_comparisons << endl;

    return 0;
}
